{"version":3,"file":"lib.modern.js","sources":["../src/index.ts"],"sourcesContent":["import { useEffect, useRef, useState } from \"react\";\nimport {\n  Conversation,\n  Mode,\n  SessionConfig,\n  Callbacks,\n  Options,\n  Status,\n  ClientToolsConfig,\n} from \"@11labs/client\";\nimport { InputConfig } from \"@11labs/client/dist/utils/input\";\nexport type {\n  Role,\n  Mode,\n  Status,\n  SessionConfig,\n  DisconnectionDetails,\n} from \"@11labs/client\";\nexport { postOverallFeedback } from \"@11labs/client\";\n\nexport type HookOptions = Partial<\n  SessionConfig & HookCallbacks & ClientToolsConfig & InputConfig\n>;\nexport type HookCallbacks = Pick<\n  Callbacks,\n  | \"onConnect\"\n  | \"onDisconnect\"\n  | \"onError\"\n  | \"onMessage\"\n  | \"onDebug\"\n  | \"onUnhandledClientToolCall\"\n>;\n\nexport function useConversation<T extends HookOptions>(defaultOptions?: T) {\n  const conversationRef = useRef<Conversation | null>(null);\n  const lockRef = useRef<Promise<Conversation> | null>(null);\n  const [status, setStatus] = useState<Status>(\"disconnected\");\n  const [canSendFeedback, setCanSendFeedback] = useState(false);\n  const [mode, setMode] = useState<Mode>(\"listening\");\n\n  useEffect(() => {\n    return () => {\n      conversationRef.current?.endSession();\n    };\n  }, []);\n\n  return {\n    startSession: (async (options?: HookOptions) => {\n      if (conversationRef.current?.isOpen()) {\n        return conversationRef.current.getId();\n      }\n\n      if (lockRef.current) {\n        const conversation = await lockRef.current;\n        return conversation.getId();\n      }\n\n      try {\n        lockRef.current = Conversation.startSession({\n          ...(defaultOptions ?? {}),\n          ...(options ?? {}),\n          onModeChange: ({ mode }) => {\n            setMode(mode);\n          },\n          onStatusChange: ({ status }) => {\n            setStatus(status);\n          },\n          onCanSendFeedbackChange: ({ canSendFeedback }) => {\n            setCanSendFeedback(canSendFeedback);\n          },\n        } as Options);\n\n        conversationRef.current = await lockRef.current;\n        return conversationRef.current.getId();\n      } finally {\n        lockRef.current = null;\n      }\n    }) as T extends SessionConfig\n      ? (options?: HookOptions) => Promise<string>\n      : (options: SessionConfig & HookOptions) => Promise<string>,\n    endSession: async () => {\n      const conversation = conversationRef.current;\n      conversationRef.current = null;\n      await conversation?.endSession();\n    },\n    setVolume: ({ volume }: { volume: number }) => {\n      conversationRef.current?.setVolume({ volume });\n    },\n    getInputByteFrequencyData: () => {\n      return conversationRef.current?.getInputByteFrequencyData();\n    },\n    getOutputByteFrequencyData: () => {\n      return conversationRef.current?.getOutputByteFrequencyData();\n    },\n    getInputVolume: () => {\n      return conversationRef.current?.getInputVolume() ?? 0;\n    },\n    getOutputVolume: () => {\n      return conversationRef.current?.getOutputVolume() ?? 0;\n    },\n    sendFeedback: (like: boolean) => {\n      conversationRef.current?.sendFeedback(like);\n    },\n    status,\n    canSendFeedback,\n    isSpeaking: mode === \"speaking\",\n  };\n}\n"],"names":["useConversation","defaultOptions","conversationRef","useRef","lockRef","status","setStatus","useState","canSendFeedback","setCanSendFeedback","mode","setMode","useEffect","_conversationRef$curr","current","endSession","startSession","async","_conversationRef$curr2","isOpen","getId","Conversation","_extends","options","onModeChange","onStatusChange","onCanSendFeedbackChange","conversation","setVolume","volume","_conversationRef$curr3","getInputByteFrequencyData","_conversationRef$curr4","getOutputByteFrequencyData","_conversationRef$curr5","getInputVolume","_conversationRef$curr6","_conversationRef$curr7","getOutputVolume","_conversationRef$curr8","_conversationRef$curr9","sendFeedback","like","_conversationRef$curr10","isSpeaking"],"mappings":"2XAiCgBA,EAAuCC,GACrD,MAAMC,EAAkBC,EAA4B,MAC9CC,EAAUD,EAAqC,OAC9CE,EAAQC,GAAaC,EAAiB,iBACtCC,EAAiBC,GAAsBF,GAAS,IAChDG,EAAMC,GAAWJ,EAAe,aAQvC,OANAK,EAAU,IACD,KAAKC,IAAAA,EACVA,OAAAA,EAAAX,EAAgBY,UAAhBD,EAAyBE,YAC3B,EACC,IAEI,CACLC,aAAeC,UAAgCC,IAAAA,EAC7C,GAAIA,OAAJA,EAAIhB,EAAgBY,UAAhBI,EAAyBC,SAC3B,OAAOjB,EAAgBY,QAAQM,QAGjC,GAAIhB,EAAQU,QAEV,aAD2BV,EAAQU,SACfM,QAGtB,IAgBE,OAfAhB,EAAQU,QAAUO,EAAaL,aAAYM,EACrCrB,CAAAA,EAAAA,MAAAA,EAAAA,EAAkB,CAAA,EAClBsB,MAAAA,EAAAA,EAAW,CAAA,EAAE,CACjBC,aAAcA,EAAGd,WACfC,EAAQD,EAAI,EAEde,eAAgBA,EAAGpB,aACjBC,EAAUD,EACZ,EACAqB,wBAAyBA,EAAGlB,sBAC1BC,EAAmBD,EAAe,KAItCN,EAAgBY,cAAgBV,EAAQU,QACjCZ,EAAgBY,QAAQM,OACjC,CAAC,QACChB,EAAQU,QAAU,IACpB,GAIFC,WAAYE,UACV,MAAMU,EAAezB,EAAgBY,QACrCZ,EAAgBY,QAAU,WACR,MAAZa,OAAY,EAAZA,EAAcZ,aAAY,EAElCa,UAAWA,EAAGC,aAAgC,IAAAC,SAC5CA,EAAA5B,EAAgBY,UAAhBgB,EAAyBF,UAAU,CAAEC,UACvC,EACAE,0BAA2BA,KAAKC,IAAAA,EAC9B,OAA8B,OAA9BA,EAAO9B,EAAgBY,cAAO,EAAvBkB,EAAyBD,2BAClC,EACAE,2BAA4BA,SAAKC,EAC/B,OAA8B,OAA9BA,EAAOhC,EAAgBY,cAAO,EAAvBoB,EAAyBD,4BAClC,EACAE,eAAgBA,SAAKC,EAAAC,EACnB,OAAgDD,OAAhDA,EAA8B,OAA9BC,EAAOnC,EAAgBY,cAAO,EAAvBuB,EAAyBF,kBAAgBC,EAAI,GAEtDE,gBAAiBA,SAAKC,EAAAC,EACpB,OAAiDD,OAAjDA,EAA8B,OAA9BC,EAAOtC,EAAgBY,cAAO,EAAvB0B,EAAyBF,mBAAiBC,EAAI,GAEvDE,aAAeC,QAAiBC,EACP,OAAvBA,EAAAzC,EAAgBY,UAAhB6B,EAAyBF,aAAaC,EACxC,EACArC,SACAG,kBACAoC,WAAqB,aAATlC,EAEhB"}