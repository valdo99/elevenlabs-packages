{"version":3,"file":"lib.module.js","sources":["../src/index.ts"],"sourcesContent":["import { useEffect, useRef, useState } from \"react\";\nimport {\n  Conversation,\n  Mode,\n  SessionConfig,\n  Callbacks,\n  Options,\n  Status,\n  ClientToolsConfig,\n} from \"elevenlabs-fork-valdo-client\";\nimport { InputConfig } from \"elevenlabs-fork-valdo-client/dist/utils/input\";\nexport type {\n  Role,\n  Mode,\n  Status,\n  SessionConfig,\n  DisconnectionDetails,\n} from \"elevenlabs-fork-valdo-client\";\nexport { postOverallFeedback } from \"elevenlabs-fork-valdo-client\";\n\nexport type HookOptions = Partial<\n  SessionConfig & HookCallbacks & ClientToolsConfig & InputConfig\n>;\nexport type HookCallbacks = Pick<\n  Callbacks,\n  | \"onConnect\"\n  | \"onDisconnect\"\n  | \"onError\"\n  | \"onMessage\"\n  | \"onDebug\"\n  | \"onUnhandledClientToolCall\"\n>;\n\nexport function useConversation<T extends HookOptions>(defaultOptions?: T) {\n  const conversationRef = useRef<Conversation | null>(null);\n  const lockRef = useRef<Promise<Conversation> | null>(null);\n  const [status, setStatus] = useState<Status>(\"disconnected\");\n  const [canSendFeedback, setCanSendFeedback] = useState(false);\n  const [mode, setMode] = useState<Mode>(\"listening\");\n\n  useEffect(() => {\n    return () => {\n      conversationRef.current?.endSession();\n    };\n  }, []);\n\n  return {\n    startSession: (async (options?: HookOptions) => {\n      if (conversationRef.current?.isOpen()) {\n        return conversationRef.current.getId();\n      }\n\n      if (lockRef.current) {\n        const conversation = await lockRef.current;\n        return conversation.getId();\n      }\n\n      try {\n        lockRef.current = Conversation.startSession({\n          ...(defaultOptions ?? {}),\n          ...(options ?? {}),\n          onModeChange: ({ mode }) => {\n            setMode(mode);\n          },\n          onStatusChange: ({ status }) => {\n            setStatus(status);\n          },\n          onCanSendFeedbackChange: ({ canSendFeedback }) => {\n            setCanSendFeedback(canSendFeedback);\n          },\n        } as Options);\n\n        conversationRef.current = await lockRef.current;\n        return conversationRef.current.getId();\n      } finally {\n        lockRef.current = null;\n      }\n    }) as T extends SessionConfig\n      ? (options?: HookOptions) => Promise<string>\n      : (options: SessionConfig & HookOptions) => Promise<string>,\n    endSession: async () => {\n      const conversation = conversationRef.current;\n      conversationRef.current = null;\n      await conversation?.endSession();\n    },\n    setVolume: ({ volume }: { volume: number }) => {\n      conversationRef.current?.setVolume({ volume });\n    },\n    getInputByteFrequencyData: () => {\n      return conversationRef.current?.getInputByteFrequencyData();\n    },\n    getOutputByteFrequencyData: () => {\n      return conversationRef.current?.getOutputByteFrequencyData();\n    },\n    getInputVolume: () => {\n      return conversationRef.current?.getInputVolume() ?? 0;\n    },\n    getOutputVolume: () => {\n      return conversationRef.current?.getOutputVolume() ?? 0;\n    },\n    sendFeedback: (like: boolean) => {\n      conversationRef.current?.sendFeedback(like);\n    },\n    status,\n    canSendFeedback,\n    isSpeaking: mode === \"speaking\",\n  };\n}\n"],"names":["useConversation","defaultOptions","conversationRef","useRef","lockRef","_useState","useState","status","setStatus","_useState2","canSendFeedback","setCanSendFeedback","_useState3","mode","setMode","useEffect","_conversationRef$curr","current","endSession","startSession","options","_conversationRef$curr2","_exit","_temp2","_result","Conversation","_extends","onModeChange","_ref","onStatusChange","_ref2","onCanSendFeedbackChange","_ref3","Promise","resolve","then","_lockRef$current","getId","_finallyRethrows","_wasThrown","_result2","isOpen","_temp","conversation","_conversation$getId","e","reject","setVolume","_ref4","_conversationRef$curr3","volume","getInputByteFrequencyData","_conversationRef$curr4","getOutputByteFrequencyData","_conversationRef$curr5","getInputVolume","_conversationRef$curr6","_conversationRef$curr7","getOutputVolume","_conversationRef$curr8","_conversationRef$curr9","sendFeedback","like","_conversationRef$curr10","isSpeaking"],"mappings":"8YAiCgB,SAAAA,EAAuCC,GACrD,IAAMC,EAAkBC,EAA4B,MAC9CC,EAAUD,EAAqC,MACrDE,EAA4BC,EAAiB,gBAAtCC,EAAMF,KAAEG,EAASH,EAAA,GACxBI,EAA8CH,GAAS,GAAhDI,EAAeD,KAAEE,EAAkBF,EAAA,GAC1CG,EAAwBN,EAAe,aAAhCO,EAAID,KAAEE,EAAOF,EAEpBG,GAMA,OANAA,EAAU,WACR,OAAO,eAAKC,EACa,OAAvBA,EAAAd,EAAgBe,UAAhBD,EAAyBE,YAC3B,CACF,EAAG,IAEI,CACLC,aAAYA,SAAUC,GAAyB,IAAA,IAAAC,EA4BpBC,EA5BoBC,EAAAA,SAAAC,GAAAF,OAAAA,EAAAE,2BAW3CpB,EAAQa,QAAUQ,EAAaN,aAAYO,KACvB,MAAdzB,EAAAA,EAAkB,CAAA,EAClBmB,MAAAA,EAAAA,EAAW,CAAE,GACjBO,aAAc,SAAFC,GACVd,EADmBc,EAAJf,KAEjB,EACAgB,eAAgB,SAAFC,GACZtB,EADuBsB,EAANvB,OAEnB,EACAwB,wBAAyB,SAAFC,GACrBrB,EADyCqB,EAAftB,gBAE5B,KACYuB,QAAAC,QAEkB9B,EAAQa,SAAOkB,KAAA,SAAAC,GAC/C,OADAlC,EAAgBe,QAAOmB,EAChBlC,EAAgBe,QAAQoB,OAAQ,6FA1BIC,CAAA,WA2B5CC,EAAAC,GACwB,GAAvBpC,EAAQa,QAAU,KAAKsB,EAAAC,MAAAA,SAAAA,CAAA,EAAA,EA3BzB,UAAAnB,EAAInB,EAAgBe,UAAhBI,EAAyBoB,SAC3B,OAAAR,QAAAC,QAAOhC,EAAgBe,QAAQoB,SAChC,IAAAK,EAEGtC,WAAAA,GAAAA,EAAQa,QAAO,OAAAgB,QAAAC,QACU9B,EAAQa,SAAOkB,KAApCQ,SAAAA,GAAYC,IAAAA,EACXD,EAAaN,QAAO,OAAAf,EAAA,EAAAsB,CAAA,EAAA,CAFzBxC,GAEyB,OAAA6B,QAAAC,QAAAQ,GAAAA,EAAAP,KAAAO,EAAAP,KAAAZ,GAAAA,EAAAmB,GAuB/B,CAAC,MAAAG,GAAA,OAAAZ,QAAAa,OAAAD,EAAA,CAAA,EAGD3B,sBAAU,IACR,IAAMyB,EAAezC,EAAgBe,QACN,OAA/Bf,EAAgBe,QAAU,KAAKgB,QAAAC,QACzBS,MAAAA,OAAAA,EAAAA,EAAczB,cAAYiB,KAClC,WAAA,EAAA,CAAC,MAAAU,GAAA,OAAAZ,QAAAa,OAAAD,KACDE,UAAW,SAAFC,GAAqCC,IAAAA,EAC5CA,OAAAA,EAAA/C,EAAgBe,UAAhBgC,EAAyBF,UAAU,CAAEG,OADnBF,EAANE,QAEd,EACAC,0BAA2B,WAAK,IAAAC,EAC9B,OAAOA,OAAPA,EAAOlD,EAAgBe,cAAhBmC,EAAAA,EAAyBD,2BAClC,EACAE,2BAA4B,eAAKC,EAC/B,OAAOA,OAAPA,EAAOpD,EAAgBe,cAAhBqC,EAAAA,EAAyBD,4BAClC,EACAE,eAAgB,WAAK,IAAAC,EAAAC,EACnB,cAAAD,EAA8B,OAA9BC,EAAOvD,EAAgBe,cAAO,EAAvBwC,EAAyBF,kBAAgBC,EAAI,CACtD,EACAE,gBAAiB,WAAK,IAAAC,EAAAC,EACpB,OAAiD,OAAjDD,EAA8B,OAA9BC,EAAO1D,EAAgBe,cAAO,EAAvB2C,EAAyBF,mBAAiBC,EAAI,CACvD,EACAE,aAAc,SAACC,GAAiBC,IAAAA,EAC9BA,OAAAA,EAAA7D,EAAgBe,UAAhB8C,EAAyBF,aAAaC,EACxC,EACAvD,OAAAA,EACAG,gBAAAA,EACAsD,WAAqB,aAATnD,EAEhB"}